{"version":3,"sources":["components/checkout-item/checkout-item.component.jsx","components/stripe-button/stripe-button.component.jsx","pages/checkout/checkout.component.jsx"],"names":["connect","dispatch","clearItem","item","clearItemFromCart","addItem","removeItem","cartItem","name","imageUrl","price","quantity","className","src","alt","onClick","StripeButton","priceForStripe","label","billingAddress","shippingAddress","image","description","amount","panelLabel","token","axios","url","method","data","then","response","alert","catch","error","console","log","JSON","parse","stripeKey","mapStateToProps","createStructuredSelector","cartItems","selectCartItems","total","selectCartTotal","map","key","id"],"mappings":"yNAgCeA,G,OAAAA,YAAQ,MANI,SAAAC,GAAQ,MAAK,CACtCC,UAAW,SAAAC,GAAI,OAAIF,EAASG,YAAkBD,KAC9CE,QAAS,SAAAF,GAAI,OAAIF,EAASI,YAAQF,KAClCG,WAAY,SAAAH,GAAI,OAAIF,EAASK,YAAWH,QAG3BH,EAzBM,SAAC,GAAkD,IAAhDO,EAA+C,EAA/CA,SAAUL,EAAqC,EAArCA,UAAWG,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAC5CE,EAAoCD,EAApCC,KAAMC,EAA8BF,EAA9BE,SAAUC,EAAoBH,EAApBG,MAAOC,EAAaJ,EAAbI,SAC/B,OACE,yBAAKC,UAAU,iBACb,yBAAKA,UAAU,mBACb,yBAAKC,IAAKJ,EAAUK,IAAI,UAE1B,0BAAMF,UAAU,QAAQJ,GACxB,0BAAMI,UAAU,YACd,yBAAKA,UAAU,QAAQG,QAAS,kBAAMT,EAAWC,KAAjD,UACA,0BAAMK,UAAU,SAASD,GACzB,yBAAKC,UAAU,QAASG,QAAS,kBAAMV,EAAQE,KAA/C,WAEF,0BAAMK,UAAU,SAASF,GACzB,yBAAKE,UAAU,gBAAgBG,QAAS,kBAAMb,EAAUK,KAAxD,e,oCCqBSS,EAtCM,SAAC,GAAa,IAAZN,EAAW,EAAXA,MACfO,EAAyB,IAARP,EAqBvB,OACE,kBAAC,IAAD,CACEQ,MAAM,UACNV,KAAK,qBACLW,gBAAc,EACdC,iBAAe,EACfC,MAAM,iCACNC,YAAW,yBAAoBZ,GAC/Ba,OAAQN,EACRO,WAAW,UACXC,MA5BY,SAAAA,GACdC,IAAM,CACJC,IAAK,UACLC,OAAQ,OACRC,KAAM,CACJN,OAAQN,EACRQ,WAEDK,MAAK,SAAAC,GACNC,MAAM,yBACLC,OAAM,SAAAC,GACPC,QAAQC,IAAI,gBAAiBC,KAAKC,MAAMJ,IACxCF,MACE,2FAgBFO,UA/BmB,iH,QCyCnBC,G,OAAkBC,YAAyB,CAC/CC,UAAWC,IACXC,MAAOC,OAGM7C,sBAAQwC,EAAiB,KAAzBxC,EAzCM,SAAC,GAAD,IAAG0C,EAAH,EAAGA,UAAWE,EAAd,EAAcA,MAAd,OACnB,yBAAKhC,UAAU,iBACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,gBACb,0CAEF,yBAAKA,UAAU,gBACb,8CAEF,yBAAKA,UAAU,gBACb,2CAEF,yBAAKA,UAAU,gBACb,wCAEF,yBAAKA,UAAU,gBACb,0CAIF8B,EAAUI,KAAI,SAAAvC,GAAQ,OACpB,kBAAC,EAAD,CAAcwC,IAAKxC,EAASyC,GAAIzC,SAAUA,OAG9C,yBAAKK,UAAU,SACb,wCAAcgC,IAEhB,yBAAKhC,UAAU,gBAAf,0DAEE,6BAFF,8CAKA,kBAAC,EAAD,CAAcF,MAAOkC","file":"static/js/5.8f253a68.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { clearItemFromCart, addItem, removeItem } from '../../redux/cart/cart.actions';\r\n\r\nimport './checkout-item.style.scss';\r\n\r\nconst CheckoutItem = ({ cartItem, clearItem, addItem, removeItem }) => {\r\n  const { name, imageUrl, price, quantity } = cartItem;\r\n  return (\r\n    <div className='checkout-item'>\r\n      <div className='image-container'>\r\n        <img src={imageUrl} alt=\"item\" />\r\n      </div>\r\n      <span className='name'>{name}</span>\r\n      <span className='quantity'>\r\n        <div className='arrow' onClick={() => removeItem(cartItem)}>&#10094;</div>\r\n        <span className='value'>{quantity}</span>\r\n        <div className='arrow'  onClick={() => addItem(cartItem)}>&#10095;</div>\r\n      </span>\r\n      <span className='price'>{price}</span>\r\n      <div className='remove-button' onClick={() => clearItem(cartItem)}>&#10005;</div>\r\n    </div>\r\n  )\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  clearItem: item => dispatch(clearItemFromCart(item)),\r\n  addItem: item => dispatch(addItem(item)),\r\n  removeItem: item => dispatch(removeItem(item))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(CheckoutItem);","import React from 'react';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport axios from 'axios';\r\n\r\nconst StripeButton = ({price}) => {\r\n  const priceForStripe = price * 100;\r\n  const publishableKey = 'pk_test_51GuEROKY0BxumztShDHka6ZCuwE55G4vUL0kICsJUJofIjN08hQrHTypQP61PzN9H4PntCA2Xyq4UyQWNOywz79400wqYdLW25';\r\n\r\n  const onToken = token => {\r\n    axios({\r\n      url: 'payment',\r\n      method: 'post',\r\n      data: {\r\n        amount: priceForStripe,\r\n        token\r\n      }\r\n    }).then(response => {\r\n      alert('payment successful')\r\n    }).catch(error => {\r\n      console.log('payment error', JSON.parse(error));\r\n      alert(\r\n        'There was an issue with your payment. Please sure you use the provided credit card.'\r\n      );\r\n    })\r\n  }\r\n\r\n  return (\r\n    <StripeCheckout\r\n      label='Pay Now'\r\n      name='THONG CLOTHING Ltd'\r\n      billingAddress\r\n      shippingAddress\r\n      image='https://svgshare.com/i/CUz.svg'\r\n      description={`Your total is $${price}`}\r\n      amount={priceForStripe}\r\n      panelLabel='Pay Now'\r\n      token={onToken}\r\n      stripeKey={publishableKey}\r\n    />\r\n  );\r\n}\r\n\r\nexport default StripeButton;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport CheckoutItem from '../../components/checkout-item/checkout-item.component';\r\nimport StripeButton from '../../components/stripe-button/stripe-button.component';\r\n\r\nimport { selectCartItems, selectCartTotal } from '../../redux/cart/cart.selectors';\r\n\r\nimport './checkout.style.scss';\r\n\r\nconst CheckoutPage = ({ cartItems, total }) => (\r\n  <div className='checkout-page'>\r\n    <div className='checkout-header'>\r\n      <div className='header-block'>\r\n        <span>Product</span>\r\n      </div>\r\n      <div className='header-block'>\r\n        <span>Description</span>\r\n      </div>\r\n      <div className='header-block'>\r\n        <span>Quantity</span>\r\n      </div>\r\n      <div className='header-block'>\r\n        <span>Price</span>\r\n      </div>\r\n      <div className='header-block'>\r\n        <span>Remove</span>\r\n      </div>\r\n    </div>\r\n    {\r\n      cartItems.map(cartItem => (\r\n        <CheckoutItem key={cartItem.id} cartItem={cartItem} />\r\n      ))\r\n    }\r\n    <div className='total'>\r\n      <span>TOTAL: {total}</span>\r\n    </div>\r\n    <div className='test-warning'>\r\n      *Please use the following test credit card for payments\r\n      <br />\r\n        4242 4242 4242 4242 - Exp: 01/25 - CVW 123\r\n    </div>\r\n    <StripeButton price={total} />\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  cartItems: selectCartItems,\r\n  total: selectCartTotal\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(CheckoutPage);\r\n"],"sourceRoot":""}