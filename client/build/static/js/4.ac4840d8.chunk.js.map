{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/form-input/form-input.component.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.component.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.component.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","FormInput","handleChange","label","otherProps","className","onChange","connect","dispatch","googleSignInStart","emailSignInStart","email","password","useState","userCredentials","setCredentials","handleSubmit","event","a","preventDefault","target","name","onSubmit","type","required","onClick","isGoogleSignIn","signUpStart","displayName","confirmPassword","setUserCredentials","alert","SignInAndSignUpPage"],"mappings":"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","file":"static/js/4.ac4840d8.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react';\r\n\r\nimport './form-input.style.scss';\r\n\r\nconst FormInput = ({ handleChange, label, ...otherProps }) => (\r\n  <div className='group'>\r\n    <input className='form-input' onChange={handleChange} {...otherProps} />\r\n    {\r\n      label ?\r\n      (<label className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>\r\n        {label}\r\n      </label>)\r\n      : null\r\n    }\r\n  </div>\r\n)\r\n\r\n\r\n\r\nexport default FormInput;","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\r\n\r\nimport './sign-in.style.scss';\r\n\r\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\r\n  const [userCredentials, setCredentials] = useState({ email: '', password: '' })\r\n\r\n  const { email, password } = userCredentials;\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    emailSignInStart(email, password);\r\n  }\r\n\r\n  const handleChange = event => {\r\n    const { value, name } = event.target;\r\n\r\n    setCredentials({ ...userCredentials, [name]: value })\r\n  }\r\n\r\n  return (\r\n    <div className='sign-in'>\r\n      <h2>I already have an account</h2>\r\n      <span>Sign in with your email and password</span>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <FormInput\r\n          name='email'\r\n          type='email'\r\n          value={email}\r\n          handleChange={handleChange}\r\n          label=\"email\"\r\n          required />\r\n        <FormInput name='password'\r\n          type='password'\r\n          value={password}\r\n          handleChange={handleChange}\r\n          label=\"password\"\r\n          required />\r\n        <div className='buttons'>\r\n          <CustomButton type=\"submit\">Sign In</CustomButton>\r\n          <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>\r\n            Sign In with Google\r\n          </CustomButton>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  googleSignInStart: () => dispatch(googleSignInStart()),\r\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password })),\r\n})\r\nexport default connect(null, mapDispatchToProps)(SignIn);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport { signUpStart } from '../../redux/user/user.actions';\r\n\r\nimport './sign-up.style.scss';\r\n\r\n\r\nconst SignUp = ({ signUpStart }) => {\r\n\r\n  const [userCredentials, setUserCredentials] = useState({\r\n    displayName: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  });\r\n\r\n  const { displayName, email, password, confirmPassword } = userCredentials;\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n\r\n    if (password !== confirmPassword) {\r\n      alert(\"password don't match\");\r\n      return;\r\n    }\r\n    signUpStart({ email, password, displayName })\r\n  }\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    setUserCredentials({ ...userCredentials, [name]: value });\r\n  }\r\n\r\n  return (\r\n    <div className='sign-up'>\r\n      <h2 className='title'>I do not have a account</h2>\r\n      <span>Sign up with your email and password</span>\r\n      <form className='sign-up-form' onSubmit={handleSubmit}>\r\n        <FormInput\r\n          type='text'\r\n          name='displayName'\r\n          value={displayName}\r\n          onChange={handleChange}\r\n          label='Display Name'\r\n        />\r\n        <FormInput\r\n          type='email'\r\n          name='email'\r\n          value={email}\r\n          onChange={handleChange}\r\n          label='Email'\r\n        />\r\n        <FormInput\r\n          type='password'\r\n          name='password'\r\n          value={password}\r\n          onChange={handleChange}\r\n          label='Password'\r\n        />\r\n        <FormInput\r\n          type='password'\r\n          name='confirmPassword'\r\n          value={confirmPassword}\r\n          onChange={handleChange}\r\n          label='Confirm Password'\r\n        />\r\n        <CustomButton type='submit'> SIGN UP </CustomButton>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);","import React from 'react';\r\n\r\nimport SignIn from '../../components/sign-in/sign-in.component';\r\nimport SignUp from '../../components/sign-up/sign-up.component';\r\n\r\nimport './sign-in-and-sign-up.style.scss';\r\n\r\nconst SignInAndSignUpPage = () => (\r\n  <div className='sign-in-and-sign-up'>\r\n    <SignIn/>\r\n    <SignUp/>\r\n  </div>\r\n)\r\n\r\nexport default SignInAndSignUpPage;"],"sourceRoot":""}